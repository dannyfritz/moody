{"project":{},"files":{"lib\\moody-utils.js":{"name":"lib\\moody-utils.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"lib\\moody.js":{"name":"lib\\moody.js","modules":{"moody":1},"classes":{"moody":1},"fors":{},"namespaces":{}}},"modules":{"moody":{"name":"moody","submodules":{},"classes":{"moody":1},"fors":{},"namespaces":{},"tag":"module","file":"lib\\moody.js","line":11,"description":"This follows the singleton pattern."}},"classes":{"moody":{"name":"moody","shortname":"moody","classitems":{},"plugins":{},"extensions":{},"plugin_for":{},"extension_for":{},"module":"moody","namespace":"","file":"lib\\moody.js","line":11,"description":"moody is a library for defining running states such as a gamestate.\nExample states of a game would be menu, game, and credits.","singleton":""}},"classitems":{"0":{"file":"lib\\moody-utils.js","line":7,"itemtype":"method","name":"callCallback","access":"private","tagname":"","params":{"0":{"name":"source","description":"Object bound to `this`","type":"Object"},"1":{"name":"callbackNAme","description":"","type":"String"},"2":{"name":"args","description":"","type":"Array","optional":true}},"class":"moody"},"1":{"file":"lib\\moody-utils.js","line":21,"itemtype":"method","name":"getArguments","access":"private","tagname":"","params":{"0":{"name":"callback","description":"","type":"Function"},"1":{"name":"args","description":"","type":"Array","optional":true}},"class":"moody"},"2":{"file":"lib\\moody.js","line":21,"description":"This Array holds all the current states.","itemtype":"property","name":"states","type":"Array","access":"private","tagname":"","class":"moody","module":"moody"},"3":{"file":"lib\\moody.js","line":30,"description":"Returns the current state.","itemtype":"method","name":"current","return":{"description":"currentState","type":"Object"},"class":"moody","module":"moody"},"4":{"file":"lib\\moody.js","line":40,"description":"Push a new state onto the stack.\n\nCalls the `enter` callback on the state being added.","itemtype":"method","name":"push","params":{"0":{"name":"state","description":"","type":"Object"},"1":{"name":"argument","description":"Arguments to pass to the `enter` callback.","type":"Mixed","optional":true,"multiple":true}},"return":{"description":"enterReturn","type":"Mixed"},"class":"moody","module":"moody"},"5":{"file":"lib\\moody.js","line":63,"description":"Remove the current state from the stack.\nCalls the `leave` callback on the state being removed.","itemtype":"method","name":"pop","return":{"description":"poppedState","type":"Object"},"class":"moody","module":"moody"},"6":{"file":"lib\\moody.js","line":79,"description":"In with the new state. Out with the old state.\n\nPop the current state and replace with a new one.\nCalls the `enter` callback on new state.\nCalls the `leave` callback on the previous state.","itemtype":"method","name":"switch","params":{"0":{"name":"toState","description":"State to be switched in.","type":"Object"},"1":{"name":"argument","description":"Arguments to pass to the `enter` callback.","type":"Mixed","optional":true,"multiple":true}},"return":{"description":"enterReturn","type":"Mixed"},"class":"moody","module":"moody"},"7":{"file":"lib\\moody.js","line":103,"description":"Calls the function denoted by `functionName` on the current state.\n\nIf the value is not a function it returns the value it maps to.","itemtype":"method","name":"execute","params":{"0":{"name":"functionName","description":"The name of the function to be called on the\n\tcurrent state.","type":"String"},"1":{"name":"argument","description":"Arguments to pass to the function.","type":"Mixed","optional":true,"multiple":true}},"class":"moody","module":"moody"}},"warnings":{"0":{"message":"unknown tag: singleton","line":" lib\\moody.js:11"}}}